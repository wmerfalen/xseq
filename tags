!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BINARY	src/main.cpp	5;"	kind:macro	line:5
BUILD_DIR	Makefile	/^BUILD_DIR=build$/;"	kind:macro	line:12
DEBUG_FLAGS	Makefile	/^DEBUG_FLAGS=$/;"	kind:macro	line:15
DEBUG_FLAGS	Makefile	/^DEBUG_FLAGS=-DDEBUG_PROGRAM_OPTIONS="1"$/;"	kind:macro	line:13
FLAGS	Makefile	/^FLAGS=-Werror -Wall -O3$/;"	kind:macro	line:9
GCC	Makefile	/^GCC=g++$/;"	kind:macro	line:3
LIBS	Makefile	/^LIBS=$/;"	kind:macro	line:10
RELEASE_FLAGS	Makefile	/^RELEASE_FLAGS=$/;"	kind:macro	line:14
RT_ALPHA	src/main.cpp	/^	RT_ALPHA,$/;"	kind:enumerator	line:8	enum:range_preference
RT_NUMERIC	src/main.cpp	/^	RT_NUMERIC,$/;"	kind:enumerator	line:7	enum:range_preference
STATIC_LIBS	Makefile	/^STATIC_LIBS=$/;"	kind:macro	line:11
VERSION_DEFINES	Makefile	/^VERSION_DEFINES=-DVERSION_MAJOR=$(VERSION_MAJOR) -DVERSION_MINOR=$(VERSION_MINOR) -DVERSION_SUB_MINOR=$(VERSION_SUB_MINOR)$/;"	kind:macro	line:8
VERSION_MAJOR	Makefile	/^VERSION_MAJOR=1$/;"	kind:macro	line:5
VERSION_MINOR	Makefile	/^VERSION_MINOR=0$/;"	kind:macro	line:6
VERSION_SUB_MINOR	Makefile	/^VERSION_SUB_MINOR=1$/;"	kind:macro	line:7
blasphemy	src/main.cpp	/^	bool blasphemy; \/\/ if true, first is 1, otherwise first is zero$/;"	kind:member	line:15	struct:program_options	access:public
dump_opts	src/main.cpp	/^void dump_opts(const program_options& opts) {$/;"	kind:function	line:21	signature:(const program_options& opts)
dump_opts	src/main.cpp	41;"	kind:macro	line:41
dump_vector	src/main.cpp	/^void dump_vector(const std::vector<std::string>& non_flag_parameters) {$/;"	kind:function	line:33	signature:(const std::vector<std::string>& non_flag_parameters)
dump_vector	src/main.cpp	42;"	kind:macro	line:42
expecting_different_separator	src/main.cpp	/^	bool expecting_different_separator;$/;"	kind:member	line:17	struct:program_options	access:public
first	src/main.cpp	/^	int first;$/;"	kind:member	line:12	struct:program_options	access:public
increment	src/main.cpp	/^	int increment;$/;"	kind:member	line:14	struct:program_options	access:public
last	src/main.cpp	/^	int last;$/;"	kind:member	line:13	struct:program_options	access:public
main	src/main.cpp	/^int main(int argc,char** argv) {$/;"	kind:function	line:107	signature:(int argc,char** argv)
print_range	src/main.cpp	/^int print_range(const program_options& options,const std::vector<std::string>& params) {$/;"	kind:function	line:45	signature:(const program_options& options,const std::vector<std::string>& params)
program_options	src/main.cpp	/^struct program_options {$/;"	kind:struct	line:10
range_type	src/main.cpp	/^	range_preference range_type;$/;"	kind:member	line:11	struct:program_options	access:public
separator	src/main.cpp	/^	std::string separator;$/;"	kind:member	line:16	struct:program_options	access:public
usage	src/main.cpp	/^void usage() {$/;"	kind:function	line:81	signature:()
